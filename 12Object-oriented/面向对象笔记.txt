什么是面向对象编程
    用对象的思想去写代码，就是面向对象编程
        过程式写法
        面向对象写法
    我们一直都在使用对象
    数组 Array  时间 Date

面向对象编程(OOP)的特点
	抽象：抓住核心问题
	封装：只能通过对象来访问方法
	继承：从已有对象上继承出新的对象
	多态：多对象的不同形态

对象的组成
    方法（行为、操作）——函数：过程、动态的
    属性——变量：状态、静态的

创建第一个面向对象程序
    为对象添加属性和方法
	Object对象
	this指向
	创建两个对象 : 重复代码过多

工厂方式
	面向对象中的封装函数

	改成与系统对象类似写法
	    首字母大写
	    New 关键字提取
	    This指向为新创建的对象
	构造函数
	    用来创建对象的函数，叫做构造函数
	存在的问题
	    对象的引用
	    浪费内存

原型-prototype
	概念
	    重写对象方法，让相同方法在内存中存在一份（提高性能）
	学习原型
	    类比  :  CSS中的Class
	通过原型改写工厂方式
	    原则
	        相同的属性和方法可以加载原型上
	        混合的编程模式
	总结面向对象写法
	    构造函数加属性，原型加方法

例：	面向对象的选项卡
        原则
            先写出普通的写法，然后改成面向对象写法
                普通方法变型
                    尽量不要出现函数嵌套函数
                    可以有全局变量
                     把onload中不是赋值的语句放到单独函数中
                改成面向对象
                    全局变量就是属性
                    函数就是方法
                    Onload中创建对象
                    改this指向问题

//////////////////////////////////////////////////////////////////
包装对象
    JS基于原型的程序
    String Number Boolean

原型链
    实例对象与原型之间的连接，叫做原型链
    __proto__( 隐式连接 )
    Object对象类型是原型链的最外层

面向对象的一些属性和方法
    hasOwnProperty()  : 看是不是对象自身下面的属性
    constructor :  查看对象的构造函数
        每个原型都会自动添加constructor属性
        For in 的时候有些属性是找不到的-----系统自带的
        避免修改construtor属性
    instanceof :  运算符
         对象与构造函数在原型链上是否有关系
    toString() :  object上的方法

对象的继承
	什么是继承
		在原有对象的基础上，略作修改，得到一个新的对象
		不影响原有对象的功能
	如何添加继承
		属性：call
		方法：for in


///////////////////////////////////////////////////////////////

组件开发
   对象的多种表现形式
    提高对象的复用性
    如何配置参数和默认参数
    例子 : 拖拽
    例子 : 弹窗

什么是组件？
   对面向对象的深入应用（UI组件，功能组件）
   将 配置参数、方法、事件，三者进行分离

创建自定义事件
    有利于多人协作开发代码
    如何去挂载自定义事件与事件函数

        例子 :  基于JQ的选项卡的组件开发模式
        Trigger() extend()等方法的使用

























